def display_credits():
    screen.fill(BLACK)
    font = pygame.font.Font(None, 48)
    display_text("Créditos", font, WHITE, screen_width // 2, screen_height // 4)

    font = pygame.font.Font(None, 36)
    credits = ["João Pedro Moura Penafiel", "Fernando Mancurti Mason", "Eduardo Gusmão"]
    for i, credit in enumerate(credits):
        display_text(credit, font, WHITE, screen_width // 2, screen_height // 2 + i * 50)

def display_game():
    screen.fill(BLUE)

    screen.blit(player_img, (player_x, player_y))

    for platform in platforms:
        screen.blit(platform_img, platform)

    for i in range(len(coin_x)):
        if coin_x[i] != -100:
            screen.blit(coin_img, (coin_x[i], coin_y[i]))

    for i in range(len(enemy_x)):
        screen.blit(enemy_img, (enemy_x[i], enemy_y[i]))

def handle_menu_events():
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            sys.exit()

def handle_game_events():
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            sys.exit()

def handle_credits_events():
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            sys.exit()

def run_game():
    global player_x, player_y, on_ground, jumping, jump_velocity, coins_collected, current_enemy_direction

    while True:
        handle_game_events()

        keys = pygame.key.get_pressed()
        if keys[pygame.K_LEFT] and player_x > 0:
            player_x -= player_speed
        if keys[pygame.K_RIGHT] and player_x < screen_width - player_width:
            player_x += player_speed

        if not on_ground:
            jump_velocity += gravity
        player_y += jump_velocity

        for platform in platforms:
            if (
                player_x < platform[0] + platform_width
                and player_x + player_width > platform[0]
                and player_y + player_height > platform[1]
                and player_y < platform[1] + platform_height + player_height
            ):
                player_y = platform[1] - player_height
                on_ground = True
                jumping = False
                jump_velocity = 0
                break
        else:
            on_ground = False
            jumping = True

        if player_x < 0:
            player_x = 0
        elif player_x > screen_width - player_width:
            player_x = screen_width - player_width
        if player_y > screen_height - player_height:
            player_y = screen_height - player_height
            on_ground = True
            jumping = False
            jump_velocity = 0

        if keys[pygame.K_UP] and on_ground:
            jumping = True
            on_ground = False
            jump_velocity = -jump_height
            jump_sound.play()